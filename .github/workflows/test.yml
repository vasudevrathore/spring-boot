name: cicd-workflow to create docker image and deploy to Azure App Service

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read  # Allows reading repository contents

jobs:
  job1:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Build with Maven
      run: mvn clean install

    - name: Login to Azure Container Registry using username & password
      run: |
        docker login ${{ secrets.ACR_NAME }}.azurecr.io \
          -u ${{ secrets.ACR_USERNAME }} \
          -p ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker image to ACR
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        ACR_REPO=${{ secrets.ACR_NAME }}.azurecr.io/myspringbootapp
        docker build -t $ACR_REPO:${IMAGE_TAG} .
        docker push $ACR_REPO:${IMAGE_TAG}

    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}  # Azure App Service name
        slot-name: "production"  # Use "staging" if deploying to a slot
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: ${{ secrets.ACR_NAME }}.azurecr.io/myspringbootapp:${{ github.sha }}

   
